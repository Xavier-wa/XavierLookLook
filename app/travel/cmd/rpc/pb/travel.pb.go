// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.0
// 	protoc        v4.25.3
// source: travel.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// --------------------------------每一间民宿--------------------------------
type Homestay struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                    //id
	CreateTime          int64  `protobuf:"varint,2,opt,name=createTime,proto3" json:"createTime,omitempty"`                    //createTime
	UpdateTime          int64  `protobuf:"varint,3,opt,name=updateTime,proto3" json:"updateTime,omitempty"`                    //updateTime
	Title               string `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`                               //标题
	SubTitle            string `protobuf:"bytes,5,opt,name=subTitle,proto3" json:"subTitle,omitempty"`                         //副标题
	Banner              string `protobuf:"bytes,6,opt,name=banner,proto3" json:"banner,omitempty"`                             //轮播图，第一张封面
	Info                string `protobuf:"bytes,7,opt,name=info,proto3" json:"info,omitempty"`                                 //介绍
	PeopleNum           int64  `protobuf:"varint,8,opt,name=peopleNum,proto3" json:"peopleNum,omitempty"`                      //容纳人的数量
	HomestayBusinessId  int64  `protobuf:"varint,9,opt,name=homestayBusinessId,proto3" json:"homestayBusinessId,omitempty"`    //民宿店铺id
	UserId              int64  `protobuf:"varint,10,opt,name=userId,proto3" json:"userId,omitempty"`                           //房东id，冗余字段
	RowState            int64  `protobuf:"varint,11,opt,name=rowState,proto3" json:"rowState,omitempty"`                       //0:下架 1:上架
	RowType             int64  `protobuf:"varint,12,opt,name=rowType,proto3" json:"rowType,omitempty"`                         //售卖类型0：按房间出售 1:按人次出售
	FoodInfo            string `protobuf:"bytes,13,opt,name=foodInfo,proto3" json:"foodInfo,omitempty"`                        //餐食标准
	FoodPrice           int64  `protobuf:"varint,14,opt,name=foodPrice,proto3" json:"foodPrice,omitempty"`                     //餐食价格（分）
	HomestayPrice       int64  `protobuf:"varint,15,opt,name=homestayPrice,proto3" json:"homestayPrice,omitempty"`             //民宿价格（分）
	MarketHomestayPrice int64  `protobuf:"varint,16,opt,name=marketHomestayPrice,proto3" json:"marketHomestayPrice,omitempty"` //民宿市场价格（分）
}

func (x *Homestay) Reset() {
	*x = Homestay{}
	if protoimpl.UnsafeEnabled {
		mi := &file_travel_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Homestay) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Homestay) ProtoMessage() {}

func (x *Homestay) ProtoReflect() protoreflect.Message {
	mi := &file_travel_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Homestay.ProtoReflect.Descriptor instead.
func (*Homestay) Descriptor() ([]byte, []int) {
	return file_travel_proto_rawDescGZIP(), []int{0}
}

func (x *Homestay) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Homestay) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *Homestay) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *Homestay) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Homestay) GetSubTitle() string {
	if x != nil {
		return x.SubTitle
	}
	return ""
}

func (x *Homestay) GetBanner() string {
	if x != nil {
		return x.Banner
	}
	return ""
}

func (x *Homestay) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

func (x *Homestay) GetPeopleNum() int64 {
	if x != nil {
		return x.PeopleNum
	}
	return 0
}

func (x *Homestay) GetHomestayBusinessId() int64 {
	if x != nil {
		return x.HomestayBusinessId
	}
	return 0
}

func (x *Homestay) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Homestay) GetRowState() int64 {
	if x != nil {
		return x.RowState
	}
	return 0
}

func (x *Homestay) GetRowType() int64 {
	if x != nil {
		return x.RowType
	}
	return 0
}

func (x *Homestay) GetFoodInfo() string {
	if x != nil {
		return x.FoodInfo
	}
	return ""
}

func (x *Homestay) GetFoodPrice() int64 {
	if x != nil {
		return x.FoodPrice
	}
	return 0
}

func (x *Homestay) GetHomestayPrice() int64 {
	if x != nil {
		return x.HomestayPrice
	}
	return 0
}

func (x *Homestay) GetMarketHomestayPrice() int64 {
	if x != nil {
		return x.MarketHomestayPrice
	}
	return 0
}

type AddHomestayReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title               string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`                               //标题
	SubTitle            string `protobuf:"bytes,2,opt,name=subTitle,proto3" json:"subTitle,omitempty"`                         //副标题
	Banner              string `protobuf:"bytes,3,opt,name=banner,proto3" json:"banner,omitempty"`                             //轮播图，第一张封面
	Info                string `protobuf:"bytes,4,opt,name=info,proto3" json:"info,omitempty"`                                 //介绍
	PeopleNum           int64  `protobuf:"varint,5,opt,name=peopleNum,proto3" json:"peopleNum,omitempty"`                      //容纳人的数量
	HomestayBusinessId  int64  `protobuf:"varint,6,opt,name=homestayBusinessId,proto3" json:"homestayBusinessId,omitempty"`    //民宿店铺id
	UserId              int64  `protobuf:"varint,7,opt,name=userId,proto3" json:"userId,omitempty"`                            //房东id，冗余字段
	RowState            int64  `protobuf:"varint,8,opt,name=rowState,proto3" json:"rowState,omitempty"`                        //0:下架 1:上架
	RowType             int64  `protobuf:"varint,9,opt,name=rowType,proto3" json:"rowType,omitempty"`                          //售卖类型0：按房间出售 1:按人次出售
	FoodInfo            string `protobuf:"bytes,10,opt,name=foodInfo,proto3" json:"foodInfo,omitempty"`                        //餐食标准
	FoodPrice           int64  `protobuf:"varint,11,opt,name=foodPrice,proto3" json:"foodPrice,omitempty"`                     //餐食价格（分）
	HomestayPrice       int64  `protobuf:"varint,12,opt,name=homestayPrice,proto3" json:"homestayPrice,omitempty"`             //民宿价格（分）
	MarketHomestayPrice int64  `protobuf:"varint,13,opt,name=marketHomestayPrice,proto3" json:"marketHomestayPrice,omitempty"` //民宿市场价格（分）
}

func (x *AddHomestayReq) Reset() {
	*x = AddHomestayReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_travel_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddHomestayReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddHomestayReq) ProtoMessage() {}

func (x *AddHomestayReq) ProtoReflect() protoreflect.Message {
	mi := &file_travel_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddHomestayReq.ProtoReflect.Descriptor instead.
func (*AddHomestayReq) Descriptor() ([]byte, []int) {
	return file_travel_proto_rawDescGZIP(), []int{1}
}

func (x *AddHomestayReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AddHomestayReq) GetSubTitle() string {
	if x != nil {
		return x.SubTitle
	}
	return ""
}

func (x *AddHomestayReq) GetBanner() string {
	if x != nil {
		return x.Banner
	}
	return ""
}

func (x *AddHomestayReq) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

func (x *AddHomestayReq) GetPeopleNum() int64 {
	if x != nil {
		return x.PeopleNum
	}
	return 0
}

func (x *AddHomestayReq) GetHomestayBusinessId() int64 {
	if x != nil {
		return x.HomestayBusinessId
	}
	return 0
}

func (x *AddHomestayReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AddHomestayReq) GetRowState() int64 {
	if x != nil {
		return x.RowState
	}
	return 0
}

func (x *AddHomestayReq) GetRowType() int64 {
	if x != nil {
		return x.RowType
	}
	return 0
}

func (x *AddHomestayReq) GetFoodInfo() string {
	if x != nil {
		return x.FoodInfo
	}
	return ""
}

func (x *AddHomestayReq) GetFoodPrice() int64 {
	if x != nil {
		return x.FoodPrice
	}
	return 0
}

func (x *AddHomestayReq) GetHomestayPrice() int64 {
	if x != nil {
		return x.HomestayPrice
	}
	return 0
}

func (x *AddHomestayReq) GetMarketHomestayPrice() int64 {
	if x != nil {
		return x.MarketHomestayPrice
	}
	return 0
}

type AddHomestayResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddHomestayResp) Reset() {
	*x = AddHomestayResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_travel_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddHomestayResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddHomestayResp) ProtoMessage() {}

func (x *AddHomestayResp) ProtoReflect() protoreflect.Message {
	mi := &file_travel_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddHomestayResp.ProtoReflect.Descriptor instead.
func (*AddHomestayResp) Descriptor() ([]byte, []int) {
	return file_travel_proto_rawDescGZIP(), []int{2}
}

type UpdateHomestayReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                    //id
	Title               string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`                               //标题
	SubTitle            string `protobuf:"bytes,3,opt,name=subTitle,proto3" json:"subTitle,omitempty"`                         //副标题
	Banner              string `protobuf:"bytes,4,opt,name=banner,proto3" json:"banner,omitempty"`                             //轮播图，第一张封面
	Info                string `protobuf:"bytes,5,opt,name=info,proto3" json:"info,omitempty"`                                 //介绍
	PeopleNum           int64  `protobuf:"varint,6,opt,name=peopleNum,proto3" json:"peopleNum,omitempty"`                      //容纳人的数量
	HomestayBusinessId  int64  `protobuf:"varint,7,opt,name=homestayBusinessId,proto3" json:"homestayBusinessId,omitempty"`    //民宿店铺id
	UserId              int64  `protobuf:"varint,8,opt,name=userId,proto3" json:"userId,omitempty"`                            //房东id，冗余字段
	RowState            int64  `protobuf:"varint,9,opt,name=rowState,proto3" json:"rowState,omitempty"`                        //0:下架 1:上架
	RowType             int64  `protobuf:"varint,10,opt,name=rowType,proto3" json:"rowType,omitempty"`                         //售卖类型0：按房间出售 1:按人次出售
	FoodInfo            string `protobuf:"bytes,11,opt,name=foodInfo,proto3" json:"foodInfo,omitempty"`                        //餐食标准
	FoodPrice           int64  `protobuf:"varint,12,opt,name=foodPrice,proto3" json:"foodPrice,omitempty"`                     //餐食价格（分）
	HomestayPrice       int64  `protobuf:"varint,13,opt,name=homestayPrice,proto3" json:"homestayPrice,omitempty"`             //民宿价格（分）
	MarketHomestayPrice int64  `protobuf:"varint,14,opt,name=marketHomestayPrice,proto3" json:"marketHomestayPrice,omitempty"` //民宿市场价格（分）
}

func (x *UpdateHomestayReq) Reset() {
	*x = UpdateHomestayReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_travel_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateHomestayReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateHomestayReq) ProtoMessage() {}

func (x *UpdateHomestayReq) ProtoReflect() protoreflect.Message {
	mi := &file_travel_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateHomestayReq.ProtoReflect.Descriptor instead.
func (*UpdateHomestayReq) Descriptor() ([]byte, []int) {
	return file_travel_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateHomestayReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateHomestayReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateHomestayReq) GetSubTitle() string {
	if x != nil {
		return x.SubTitle
	}
	return ""
}

func (x *UpdateHomestayReq) GetBanner() string {
	if x != nil {
		return x.Banner
	}
	return ""
}

func (x *UpdateHomestayReq) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

func (x *UpdateHomestayReq) GetPeopleNum() int64 {
	if x != nil {
		return x.PeopleNum
	}
	return 0
}

func (x *UpdateHomestayReq) GetHomestayBusinessId() int64 {
	if x != nil {
		return x.HomestayBusinessId
	}
	return 0
}

func (x *UpdateHomestayReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UpdateHomestayReq) GetRowState() int64 {
	if x != nil {
		return x.RowState
	}
	return 0
}

func (x *UpdateHomestayReq) GetRowType() int64 {
	if x != nil {
		return x.RowType
	}
	return 0
}

func (x *UpdateHomestayReq) GetFoodInfo() string {
	if x != nil {
		return x.FoodInfo
	}
	return ""
}

func (x *UpdateHomestayReq) GetFoodPrice() int64 {
	if x != nil {
		return x.FoodPrice
	}
	return 0
}

func (x *UpdateHomestayReq) GetHomestayPrice() int64 {
	if x != nil {
		return x.HomestayPrice
	}
	return 0
}

func (x *UpdateHomestayReq) GetMarketHomestayPrice() int64 {
	if x != nil {
		return x.MarketHomestayPrice
	}
	return 0
}

type UpdateHomestayResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateHomestayResp) Reset() {
	*x = UpdateHomestayResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_travel_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateHomestayResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateHomestayResp) ProtoMessage() {}

func (x *UpdateHomestayResp) ProtoReflect() protoreflect.Message {
	mi := &file_travel_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateHomestayResp.ProtoReflect.Descriptor instead.
func (*UpdateHomestayResp) Descriptor() ([]byte, []int) {
	return file_travel_proto_rawDescGZIP(), []int{4}
}

type DelHomestayReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //id
}

func (x *DelHomestayReq) Reset() {
	*x = DelHomestayReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_travel_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelHomestayReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelHomestayReq) ProtoMessage() {}

func (x *DelHomestayReq) ProtoReflect() protoreflect.Message {
	mi := &file_travel_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelHomestayReq.ProtoReflect.Descriptor instead.
func (*DelHomestayReq) Descriptor() ([]byte, []int) {
	return file_travel_proto_rawDescGZIP(), []int{5}
}

func (x *DelHomestayReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DelHomestayResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelHomestayResp) Reset() {
	*x = DelHomestayResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_travel_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelHomestayResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelHomestayResp) ProtoMessage() {}

func (x *DelHomestayResp) ProtoReflect() protoreflect.Message {
	mi := &file_travel_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelHomestayResp.ProtoReflect.Descriptor instead.
func (*DelHomestayResp) Descriptor() ([]byte, []int) {
	return file_travel_proto_rawDescGZIP(), []int{6}
}

type GetHomestayByIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //id
}

func (x *GetHomestayByIdReq) Reset() {
	*x = GetHomestayByIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_travel_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHomestayByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHomestayByIdReq) ProtoMessage() {}

func (x *GetHomestayByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_travel_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHomestayByIdReq.ProtoReflect.Descriptor instead.
func (*GetHomestayByIdReq) Descriptor() ([]byte, []int) {
	return file_travel_proto_rawDescGZIP(), []int{7}
}

func (x *GetHomestayByIdReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetHomestayByIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Homestay *Homestay `protobuf:"bytes,1,opt,name=homestay,proto3" json:"homestay,omitempty"` //homestay
}

func (x *GetHomestayByIdResp) Reset() {
	*x = GetHomestayByIdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_travel_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHomestayByIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHomestayByIdResp) ProtoMessage() {}

func (x *GetHomestayByIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_travel_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHomestayByIdResp.ProtoReflect.Descriptor instead.
func (*GetHomestayByIdResp) Descriptor() ([]byte, []int) {
	return file_travel_proto_rawDescGZIP(), []int{8}
}

func (x *GetHomestayByIdResp) GetHomestay() *Homestay {
	if x != nil {
		return x.Homestay
	}
	return nil
}

type SearchHomestayReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page                int64  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`                                //page
	Limit               int64  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`                              //limit
	Id                  int64  `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`                                    //id
	CreateTime          int64  `protobuf:"varint,4,opt,name=createTime,proto3" json:"createTime,omitempty"`                    //createTime
	UpdateTime          int64  `protobuf:"varint,5,opt,name=updateTime,proto3" json:"updateTime,omitempty"`                    //updateTime
	Title               string `protobuf:"bytes,6,opt,name=title,proto3" json:"title,omitempty"`                               //标题
	SubTitle            string `protobuf:"bytes,7,opt,name=subTitle,proto3" json:"subTitle,omitempty"`                         //副标题
	Banner              string `protobuf:"bytes,8,opt,name=banner,proto3" json:"banner,omitempty"`                             //轮播图，第一张封面
	Info                string `protobuf:"bytes,9,opt,name=info,proto3" json:"info,omitempty"`                                 //介绍
	PeopleNum           int64  `protobuf:"varint,10,opt,name=peopleNum,proto3" json:"peopleNum,omitempty"`                     //容纳人的数量
	HomestayBusinessId  int64  `protobuf:"varint,11,opt,name=homestayBusinessId,proto3" json:"homestayBusinessId,omitempty"`   //民宿店铺id
	UserId              int64  `protobuf:"varint,12,opt,name=userId,proto3" json:"userId,omitempty"`                           //房东id，冗余字段
	RowState            int64  `protobuf:"varint,13,opt,name=rowState,proto3" json:"rowState,omitempty"`                       //0:下架 1:上架
	RowType             int64  `protobuf:"varint,14,opt,name=rowType,proto3" json:"rowType,omitempty"`                         //售卖类型0：按房间出售 1:按人次出售
	FoodInfo            string `protobuf:"bytes,15,opt,name=foodInfo,proto3" json:"foodInfo,omitempty"`                        //餐食标准
	FoodPrice           int64  `protobuf:"varint,16,opt,name=foodPrice,proto3" json:"foodPrice,omitempty"`                     //餐食价格（分）
	HomestayPrice       int64  `protobuf:"varint,17,opt,name=homestayPrice,proto3" json:"homestayPrice,omitempty"`             //民宿价格（分）
	MarketHomestayPrice int64  `protobuf:"varint,18,opt,name=marketHomestayPrice,proto3" json:"marketHomestayPrice,omitempty"` //民宿市场价格（分）
}

func (x *SearchHomestayReq) Reset() {
	*x = SearchHomestayReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_travel_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchHomestayReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchHomestayReq) ProtoMessage() {}

func (x *SearchHomestayReq) ProtoReflect() protoreflect.Message {
	mi := &file_travel_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchHomestayReq.ProtoReflect.Descriptor instead.
func (*SearchHomestayReq) Descriptor() ([]byte, []int) {
	return file_travel_proto_rawDescGZIP(), []int{9}
}

func (x *SearchHomestayReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchHomestayReq) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchHomestayReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SearchHomestayReq) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *SearchHomestayReq) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *SearchHomestayReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SearchHomestayReq) GetSubTitle() string {
	if x != nil {
		return x.SubTitle
	}
	return ""
}

func (x *SearchHomestayReq) GetBanner() string {
	if x != nil {
		return x.Banner
	}
	return ""
}

func (x *SearchHomestayReq) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

func (x *SearchHomestayReq) GetPeopleNum() int64 {
	if x != nil {
		return x.PeopleNum
	}
	return 0
}

func (x *SearchHomestayReq) GetHomestayBusinessId() int64 {
	if x != nil {
		return x.HomestayBusinessId
	}
	return 0
}

func (x *SearchHomestayReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *SearchHomestayReq) GetRowState() int64 {
	if x != nil {
		return x.RowState
	}
	return 0
}

func (x *SearchHomestayReq) GetRowType() int64 {
	if x != nil {
		return x.RowType
	}
	return 0
}

func (x *SearchHomestayReq) GetFoodInfo() string {
	if x != nil {
		return x.FoodInfo
	}
	return ""
}

func (x *SearchHomestayReq) GetFoodPrice() int64 {
	if x != nil {
		return x.FoodPrice
	}
	return 0
}

func (x *SearchHomestayReq) GetHomestayPrice() int64 {
	if x != nil {
		return x.HomestayPrice
	}
	return 0
}

func (x *SearchHomestayReq) GetMarketHomestayPrice() int64 {
	if x != nil {
		return x.MarketHomestayPrice
	}
	return 0
}

type SearchHomestayResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Homestay []*Homestay `protobuf:"bytes,1,rep,name=homestay,proto3" json:"homestay,omitempty"` //homestay
}

func (x *SearchHomestayResp) Reset() {
	*x = SearchHomestayResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_travel_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchHomestayResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchHomestayResp) ProtoMessage() {}

func (x *SearchHomestayResp) ProtoReflect() protoreflect.Message {
	mi := &file_travel_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchHomestayResp.ProtoReflect.Descriptor instead.
func (*SearchHomestayResp) Descriptor() ([]byte, []int) {
	return file_travel_proto_rawDescGZIP(), []int{10}
}

func (x *SearchHomestayResp) GetHomestay() []*Homestay {
	if x != nil {
		return x.Homestay
	}
	return nil
}

// --------------------------------每一间民宿--------------------------------
type HomestayActivity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                 //id
	CreateTime int64  `protobuf:"varint,2,opt,name=createTime,proto3" json:"createTime,omitempty"` //createTime
	UpdateTime int64  `protobuf:"varint,3,opt,name=updateTime,proto3" json:"updateTime,omitempty"` //updateTime
	RowType    string `protobuf:"bytes,4,opt,name=rowType,proto3" json:"rowType,omitempty"`        //活动类型
	DataId     int64  `protobuf:"varint,5,opt,name=dataId,proto3" json:"dataId,omitempty"`         //业务表id（id跟随活动类型走）
	RowStatus  int64  `protobuf:"varint,6,opt,name=rowStatus,proto3" json:"rowStatus,omitempty"`   //0:下架 1:上架
}

func (x *HomestayActivity) Reset() {
	*x = HomestayActivity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_travel_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomestayActivity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomestayActivity) ProtoMessage() {}

func (x *HomestayActivity) ProtoReflect() protoreflect.Message {
	mi := &file_travel_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomestayActivity.ProtoReflect.Descriptor instead.
func (*HomestayActivity) Descriptor() ([]byte, []int) {
	return file_travel_proto_rawDescGZIP(), []int{11}
}

func (x *HomestayActivity) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *HomestayActivity) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *HomestayActivity) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *HomestayActivity) GetRowType() string {
	if x != nil {
		return x.RowType
	}
	return ""
}

func (x *HomestayActivity) GetDataId() int64 {
	if x != nil {
		return x.DataId
	}
	return 0
}

func (x *HomestayActivity) GetRowStatus() int64 {
	if x != nil {
		return x.RowStatus
	}
	return 0
}

type AddHomestayActivityReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RowType   string `protobuf:"bytes,1,opt,name=rowType,proto3" json:"rowType,omitempty"`      //活动类型
	DataId    int64  `protobuf:"varint,2,opt,name=dataId,proto3" json:"dataId,omitempty"`       //业务表id（id跟随活动类型走）
	RowStatus int64  `protobuf:"varint,3,opt,name=rowStatus,proto3" json:"rowStatus,omitempty"` //0:下架 1:上架
}

func (x *AddHomestayActivityReq) Reset() {
	*x = AddHomestayActivityReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_travel_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddHomestayActivityReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddHomestayActivityReq) ProtoMessage() {}

func (x *AddHomestayActivityReq) ProtoReflect() protoreflect.Message {
	mi := &file_travel_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddHomestayActivityReq.ProtoReflect.Descriptor instead.
func (*AddHomestayActivityReq) Descriptor() ([]byte, []int) {
	return file_travel_proto_rawDescGZIP(), []int{12}
}

func (x *AddHomestayActivityReq) GetRowType() string {
	if x != nil {
		return x.RowType
	}
	return ""
}

func (x *AddHomestayActivityReq) GetDataId() int64 {
	if x != nil {
		return x.DataId
	}
	return 0
}

func (x *AddHomestayActivityReq) GetRowStatus() int64 {
	if x != nil {
		return x.RowStatus
	}
	return 0
}

type AddHomestayActivityResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddHomestayActivityResp) Reset() {
	*x = AddHomestayActivityResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_travel_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddHomestayActivityResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddHomestayActivityResp) ProtoMessage() {}

func (x *AddHomestayActivityResp) ProtoReflect() protoreflect.Message {
	mi := &file_travel_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddHomestayActivityResp.ProtoReflect.Descriptor instead.
func (*AddHomestayActivityResp) Descriptor() ([]byte, []int) {
	return file_travel_proto_rawDescGZIP(), []int{13}
}

type UpdateHomestayActivityReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`               //id
	RowType   string `protobuf:"bytes,2,opt,name=rowType,proto3" json:"rowType,omitempty"`      //活动类型
	DataId    int64  `protobuf:"varint,3,opt,name=dataId,proto3" json:"dataId,omitempty"`       //业务表id（id跟随活动类型走）
	RowStatus int64  `protobuf:"varint,4,opt,name=rowStatus,proto3" json:"rowStatus,omitempty"` //0:下架 1:上架
}

func (x *UpdateHomestayActivityReq) Reset() {
	*x = UpdateHomestayActivityReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_travel_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateHomestayActivityReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateHomestayActivityReq) ProtoMessage() {}

func (x *UpdateHomestayActivityReq) ProtoReflect() protoreflect.Message {
	mi := &file_travel_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateHomestayActivityReq.ProtoReflect.Descriptor instead.
func (*UpdateHomestayActivityReq) Descriptor() ([]byte, []int) {
	return file_travel_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateHomestayActivityReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateHomestayActivityReq) GetRowType() string {
	if x != nil {
		return x.RowType
	}
	return ""
}

func (x *UpdateHomestayActivityReq) GetDataId() int64 {
	if x != nil {
		return x.DataId
	}
	return 0
}

func (x *UpdateHomestayActivityReq) GetRowStatus() int64 {
	if x != nil {
		return x.RowStatus
	}
	return 0
}

type UpdateHomestayActivityResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateHomestayActivityResp) Reset() {
	*x = UpdateHomestayActivityResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_travel_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateHomestayActivityResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateHomestayActivityResp) ProtoMessage() {}

func (x *UpdateHomestayActivityResp) ProtoReflect() protoreflect.Message {
	mi := &file_travel_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateHomestayActivityResp.ProtoReflect.Descriptor instead.
func (*UpdateHomestayActivityResp) Descriptor() ([]byte, []int) {
	return file_travel_proto_rawDescGZIP(), []int{15}
}

type DelHomestayActivityReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //id
}

func (x *DelHomestayActivityReq) Reset() {
	*x = DelHomestayActivityReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_travel_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelHomestayActivityReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelHomestayActivityReq) ProtoMessage() {}

func (x *DelHomestayActivityReq) ProtoReflect() protoreflect.Message {
	mi := &file_travel_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelHomestayActivityReq.ProtoReflect.Descriptor instead.
func (*DelHomestayActivityReq) Descriptor() ([]byte, []int) {
	return file_travel_proto_rawDescGZIP(), []int{16}
}

func (x *DelHomestayActivityReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DelHomestayActivityResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelHomestayActivityResp) Reset() {
	*x = DelHomestayActivityResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_travel_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelHomestayActivityResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelHomestayActivityResp) ProtoMessage() {}

func (x *DelHomestayActivityResp) ProtoReflect() protoreflect.Message {
	mi := &file_travel_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelHomestayActivityResp.ProtoReflect.Descriptor instead.
func (*DelHomestayActivityResp) Descriptor() ([]byte, []int) {
	return file_travel_proto_rawDescGZIP(), []int{17}
}

type GetHomestayActivityByIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //id
}

func (x *GetHomestayActivityByIdReq) Reset() {
	*x = GetHomestayActivityByIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_travel_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHomestayActivityByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHomestayActivityByIdReq) ProtoMessage() {}

func (x *GetHomestayActivityByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_travel_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHomestayActivityByIdReq.ProtoReflect.Descriptor instead.
func (*GetHomestayActivityByIdReq) Descriptor() ([]byte, []int) {
	return file_travel_proto_rawDescGZIP(), []int{18}
}

func (x *GetHomestayActivityByIdReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetHomestayActivityByIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HomestayActivity *HomestayActivity `protobuf:"bytes,1,opt,name=homestayActivity,proto3" json:"homestayActivity,omitempty"` //homestayActivity
}

func (x *GetHomestayActivityByIdResp) Reset() {
	*x = GetHomestayActivityByIdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_travel_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHomestayActivityByIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHomestayActivityByIdResp) ProtoMessage() {}

func (x *GetHomestayActivityByIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_travel_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHomestayActivityByIdResp.ProtoReflect.Descriptor instead.
func (*GetHomestayActivityByIdResp) Descriptor() ([]byte, []int) {
	return file_travel_proto_rawDescGZIP(), []int{19}
}

func (x *GetHomestayActivityByIdResp) GetHomestayActivity() *HomestayActivity {
	if x != nil {
		return x.HomestayActivity
	}
	return nil
}

type SearchHomestayActivityReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page       int64  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`             //page
	Limit      int64  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`           //limit
	Id         int64  `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`                 //id
	CreateTime int64  `protobuf:"varint,4,opt,name=createTime,proto3" json:"createTime,omitempty"` //createTime
	UpdateTime int64  `protobuf:"varint,5,opt,name=updateTime,proto3" json:"updateTime,omitempty"` //updateTime
	RowType    string `protobuf:"bytes,6,opt,name=rowType,proto3" json:"rowType,omitempty"`        //活动类型
	DataId     int64  `protobuf:"varint,7,opt,name=dataId,proto3" json:"dataId,omitempty"`         //业务表id（id跟随活动类型走）
	RowStatus  int64  `protobuf:"varint,8,opt,name=rowStatus,proto3" json:"rowStatus,omitempty"`   //0:下架 1:上架
}

func (x *SearchHomestayActivityReq) Reset() {
	*x = SearchHomestayActivityReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_travel_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchHomestayActivityReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchHomestayActivityReq) ProtoMessage() {}

func (x *SearchHomestayActivityReq) ProtoReflect() protoreflect.Message {
	mi := &file_travel_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchHomestayActivityReq.ProtoReflect.Descriptor instead.
func (*SearchHomestayActivityReq) Descriptor() ([]byte, []int) {
	return file_travel_proto_rawDescGZIP(), []int{20}
}

func (x *SearchHomestayActivityReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchHomestayActivityReq) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchHomestayActivityReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SearchHomestayActivityReq) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *SearchHomestayActivityReq) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *SearchHomestayActivityReq) GetRowType() string {
	if x != nil {
		return x.RowType
	}
	return ""
}

func (x *SearchHomestayActivityReq) GetDataId() int64 {
	if x != nil {
		return x.DataId
	}
	return 0
}

func (x *SearchHomestayActivityReq) GetRowStatus() int64 {
	if x != nil {
		return x.RowStatus
	}
	return 0
}

type SearchHomestayActivityResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HomestayActivity []*HomestayActivity `protobuf:"bytes,1,rep,name=homestayActivity,proto3" json:"homestayActivity,omitempty"` //homestayActivity
}

func (x *SearchHomestayActivityResp) Reset() {
	*x = SearchHomestayActivityResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_travel_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchHomestayActivityResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchHomestayActivityResp) ProtoMessage() {}

func (x *SearchHomestayActivityResp) ProtoReflect() protoreflect.Message {
	mi := &file_travel_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchHomestayActivityResp.ProtoReflect.Descriptor instead.
func (*SearchHomestayActivityResp) Descriptor() ([]byte, []int) {
	return file_travel_proto_rawDescGZIP(), []int{21}
}

func (x *SearchHomestayActivityResp) GetHomestayActivity() []*HomestayActivity {
	if x != nil {
		return x.HomestayActivity
	}
	return nil
}

// --------------------------------民宿店铺--------------------------------
type HomestayBusiness struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                  //id
	CreateTime  int64   `protobuf:"varint,2,opt,name=createTime,proto3" json:"createTime,omitempty"`  //createTime
	UpdateTime  int64   `protobuf:"varint,3,opt,name=updateTime,proto3" json:"updateTime,omitempty"`  //updateTime
	Title       string  `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`             //店铺名称
	UserId      int64   `protobuf:"varint,5,opt,name=userId,proto3" json:"userId,omitempty"`          //关联的用户id
	Info        string  `protobuf:"bytes,6,opt,name=info,proto3" json:"info,omitempty"`               //店铺介绍
	BossInfo    string  `protobuf:"bytes,7,opt,name=bossInfo,proto3" json:"bossInfo,omitempty"`       //房东介绍
	LicenseFron string  `protobuf:"bytes,8,opt,name=licenseFron,proto3" json:"licenseFron,omitempty"` //营业执照正面
	LicenseBack string  `protobuf:"bytes,9,opt,name=licenseBack,proto3" json:"licenseBack,omitempty"` //营业执照背面
	RowState    int64   `protobuf:"varint,10,opt,name=rowState,proto3" json:"rowState,omitempty"`     //0:禁止营业 1:正常营业
	Star        float64 `protobuf:"fixed64,11,opt,name=star,proto3" json:"star,omitempty"`            //店铺整体评价，冗余
	Tags        string  `protobuf:"bytes,12,opt,name=tags,proto3" json:"tags,omitempty"`              //每个店家一个标签，自己编辑
	Cover       string  `protobuf:"bytes,13,opt,name=cover,proto3" json:"cover,omitempty"`            //封面图
	HeaderImg   string  `protobuf:"bytes,14,opt,name=headerImg,proto3" json:"headerImg,omitempty"`    //店招门头图片
}

func (x *HomestayBusiness) Reset() {
	*x = HomestayBusiness{}
	if protoimpl.UnsafeEnabled {
		mi := &file_travel_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomestayBusiness) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomestayBusiness) ProtoMessage() {}

func (x *HomestayBusiness) ProtoReflect() protoreflect.Message {
	mi := &file_travel_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomestayBusiness.ProtoReflect.Descriptor instead.
func (*HomestayBusiness) Descriptor() ([]byte, []int) {
	return file_travel_proto_rawDescGZIP(), []int{22}
}

func (x *HomestayBusiness) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *HomestayBusiness) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *HomestayBusiness) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *HomestayBusiness) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *HomestayBusiness) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *HomestayBusiness) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

func (x *HomestayBusiness) GetBossInfo() string {
	if x != nil {
		return x.BossInfo
	}
	return ""
}

func (x *HomestayBusiness) GetLicenseFron() string {
	if x != nil {
		return x.LicenseFron
	}
	return ""
}

func (x *HomestayBusiness) GetLicenseBack() string {
	if x != nil {
		return x.LicenseBack
	}
	return ""
}

func (x *HomestayBusiness) GetRowState() int64 {
	if x != nil {
		return x.RowState
	}
	return 0
}

func (x *HomestayBusiness) GetStar() float64 {
	if x != nil {
		return x.Star
	}
	return 0
}

func (x *HomestayBusiness) GetTags() string {
	if x != nil {
		return x.Tags
	}
	return ""
}

func (x *HomestayBusiness) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *HomestayBusiness) GetHeaderImg() string {
	if x != nil {
		return x.HeaderImg
	}
	return ""
}

type AddHomestayBusinessReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title       string  `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`             //店铺名称
	UserId      int64   `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`          //关联的用户id
	Info        string  `protobuf:"bytes,3,opt,name=info,proto3" json:"info,omitempty"`               //店铺介绍
	BossInfo    string  `protobuf:"bytes,4,opt,name=bossInfo,proto3" json:"bossInfo,omitempty"`       //房东介绍
	LicenseFron string  `protobuf:"bytes,5,opt,name=licenseFron,proto3" json:"licenseFron,omitempty"` //营业执照正面
	LicenseBack string  `protobuf:"bytes,6,opt,name=licenseBack,proto3" json:"licenseBack,omitempty"` //营业执照背面
	RowState    int64   `protobuf:"varint,7,opt,name=rowState,proto3" json:"rowState,omitempty"`      //0:禁止营业 1:正常营业
	Star        float64 `protobuf:"fixed64,8,opt,name=star,proto3" json:"star,omitempty"`             //店铺整体评价，冗余
	Tags        string  `protobuf:"bytes,9,opt,name=tags,proto3" json:"tags,omitempty"`               //每个店家一个标签，自己编辑
	Cover       string  `protobuf:"bytes,10,opt,name=cover,proto3" json:"cover,omitempty"`            //封面图
	HeaderImg   string  `protobuf:"bytes,11,opt,name=headerImg,proto3" json:"headerImg,omitempty"`    //店招门头图片
}

func (x *AddHomestayBusinessReq) Reset() {
	*x = AddHomestayBusinessReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_travel_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddHomestayBusinessReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddHomestayBusinessReq) ProtoMessage() {}

func (x *AddHomestayBusinessReq) ProtoReflect() protoreflect.Message {
	mi := &file_travel_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddHomestayBusinessReq.ProtoReflect.Descriptor instead.
func (*AddHomestayBusinessReq) Descriptor() ([]byte, []int) {
	return file_travel_proto_rawDescGZIP(), []int{23}
}

func (x *AddHomestayBusinessReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AddHomestayBusinessReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AddHomestayBusinessReq) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

func (x *AddHomestayBusinessReq) GetBossInfo() string {
	if x != nil {
		return x.BossInfo
	}
	return ""
}

func (x *AddHomestayBusinessReq) GetLicenseFron() string {
	if x != nil {
		return x.LicenseFron
	}
	return ""
}

func (x *AddHomestayBusinessReq) GetLicenseBack() string {
	if x != nil {
		return x.LicenseBack
	}
	return ""
}

func (x *AddHomestayBusinessReq) GetRowState() int64 {
	if x != nil {
		return x.RowState
	}
	return 0
}

func (x *AddHomestayBusinessReq) GetStar() float64 {
	if x != nil {
		return x.Star
	}
	return 0
}

func (x *AddHomestayBusinessReq) GetTags() string {
	if x != nil {
		return x.Tags
	}
	return ""
}

func (x *AddHomestayBusinessReq) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *AddHomestayBusinessReq) GetHeaderImg() string {
	if x != nil {
		return x.HeaderImg
	}
	return ""
}

type AddHomestayBusinessResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddHomestayBusinessResp) Reset() {
	*x = AddHomestayBusinessResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_travel_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddHomestayBusinessResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddHomestayBusinessResp) ProtoMessage() {}

func (x *AddHomestayBusinessResp) ProtoReflect() protoreflect.Message {
	mi := &file_travel_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddHomestayBusinessResp.ProtoReflect.Descriptor instead.
func (*AddHomestayBusinessResp) Descriptor() ([]byte, []int) {
	return file_travel_proto_rawDescGZIP(), []int{24}
}

type UpdateHomestayBusinessReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                  //id
	Title       string  `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`             //店铺名称
	UserId      int64   `protobuf:"varint,3,opt,name=userId,proto3" json:"userId,omitempty"`          //关联的用户id
	Info        string  `protobuf:"bytes,4,opt,name=info,proto3" json:"info,omitempty"`               //店铺介绍
	BossInfo    string  `protobuf:"bytes,5,opt,name=bossInfo,proto3" json:"bossInfo,omitempty"`       //房东介绍
	LicenseFron string  `protobuf:"bytes,6,opt,name=licenseFron,proto3" json:"licenseFron,omitempty"` //营业执照正面
	LicenseBack string  `protobuf:"bytes,7,opt,name=licenseBack,proto3" json:"licenseBack,omitempty"` //营业执照背面
	RowState    int64   `protobuf:"varint,8,opt,name=rowState,proto3" json:"rowState,omitempty"`      //0:禁止营业 1:正常营业
	Star        float64 `protobuf:"fixed64,9,opt,name=star,proto3" json:"star,omitempty"`             //店铺整体评价，冗余
	Tags        string  `protobuf:"bytes,10,opt,name=tags,proto3" json:"tags,omitempty"`              //每个店家一个标签，自己编辑
	Cover       string  `protobuf:"bytes,11,opt,name=cover,proto3" json:"cover,omitempty"`            //封面图
	HeaderImg   string  `protobuf:"bytes,12,opt,name=headerImg,proto3" json:"headerImg,omitempty"`    //店招门头图片
}

func (x *UpdateHomestayBusinessReq) Reset() {
	*x = UpdateHomestayBusinessReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_travel_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateHomestayBusinessReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateHomestayBusinessReq) ProtoMessage() {}

func (x *UpdateHomestayBusinessReq) ProtoReflect() protoreflect.Message {
	mi := &file_travel_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateHomestayBusinessReq.ProtoReflect.Descriptor instead.
func (*UpdateHomestayBusinessReq) Descriptor() ([]byte, []int) {
	return file_travel_proto_rawDescGZIP(), []int{25}
}

func (x *UpdateHomestayBusinessReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateHomestayBusinessReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateHomestayBusinessReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UpdateHomestayBusinessReq) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

func (x *UpdateHomestayBusinessReq) GetBossInfo() string {
	if x != nil {
		return x.BossInfo
	}
	return ""
}

func (x *UpdateHomestayBusinessReq) GetLicenseFron() string {
	if x != nil {
		return x.LicenseFron
	}
	return ""
}

func (x *UpdateHomestayBusinessReq) GetLicenseBack() string {
	if x != nil {
		return x.LicenseBack
	}
	return ""
}

func (x *UpdateHomestayBusinessReq) GetRowState() int64 {
	if x != nil {
		return x.RowState
	}
	return 0
}

func (x *UpdateHomestayBusinessReq) GetStar() float64 {
	if x != nil {
		return x.Star
	}
	return 0
}

func (x *UpdateHomestayBusinessReq) GetTags() string {
	if x != nil {
		return x.Tags
	}
	return ""
}

func (x *UpdateHomestayBusinessReq) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *UpdateHomestayBusinessReq) GetHeaderImg() string {
	if x != nil {
		return x.HeaderImg
	}
	return ""
}

type UpdateHomestayBusinessResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateHomestayBusinessResp) Reset() {
	*x = UpdateHomestayBusinessResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_travel_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateHomestayBusinessResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateHomestayBusinessResp) ProtoMessage() {}

func (x *UpdateHomestayBusinessResp) ProtoReflect() protoreflect.Message {
	mi := &file_travel_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateHomestayBusinessResp.ProtoReflect.Descriptor instead.
func (*UpdateHomestayBusinessResp) Descriptor() ([]byte, []int) {
	return file_travel_proto_rawDescGZIP(), []int{26}
}

type DelHomestayBusinessReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //id
}

func (x *DelHomestayBusinessReq) Reset() {
	*x = DelHomestayBusinessReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_travel_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelHomestayBusinessReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelHomestayBusinessReq) ProtoMessage() {}

func (x *DelHomestayBusinessReq) ProtoReflect() protoreflect.Message {
	mi := &file_travel_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelHomestayBusinessReq.ProtoReflect.Descriptor instead.
func (*DelHomestayBusinessReq) Descriptor() ([]byte, []int) {
	return file_travel_proto_rawDescGZIP(), []int{27}
}

func (x *DelHomestayBusinessReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DelHomestayBusinessResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelHomestayBusinessResp) Reset() {
	*x = DelHomestayBusinessResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_travel_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelHomestayBusinessResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelHomestayBusinessResp) ProtoMessage() {}

func (x *DelHomestayBusinessResp) ProtoReflect() protoreflect.Message {
	mi := &file_travel_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelHomestayBusinessResp.ProtoReflect.Descriptor instead.
func (*DelHomestayBusinessResp) Descriptor() ([]byte, []int) {
	return file_travel_proto_rawDescGZIP(), []int{28}
}

type GetHomestayBusinessByIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //id
}

func (x *GetHomestayBusinessByIdReq) Reset() {
	*x = GetHomestayBusinessByIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_travel_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHomestayBusinessByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHomestayBusinessByIdReq) ProtoMessage() {}

func (x *GetHomestayBusinessByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_travel_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHomestayBusinessByIdReq.ProtoReflect.Descriptor instead.
func (*GetHomestayBusinessByIdReq) Descriptor() ([]byte, []int) {
	return file_travel_proto_rawDescGZIP(), []int{29}
}

func (x *GetHomestayBusinessByIdReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetHomestayBusinessByIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HomestayBusiness *HomestayBusiness `protobuf:"bytes,1,opt,name=homestayBusiness,proto3" json:"homestayBusiness,omitempty"` //homestayBusiness
}

func (x *GetHomestayBusinessByIdResp) Reset() {
	*x = GetHomestayBusinessByIdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_travel_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHomestayBusinessByIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHomestayBusinessByIdResp) ProtoMessage() {}

func (x *GetHomestayBusinessByIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_travel_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHomestayBusinessByIdResp.ProtoReflect.Descriptor instead.
func (*GetHomestayBusinessByIdResp) Descriptor() ([]byte, []int) {
	return file_travel_proto_rawDescGZIP(), []int{30}
}

func (x *GetHomestayBusinessByIdResp) GetHomestayBusiness() *HomestayBusiness {
	if x != nil {
		return x.HomestayBusiness
	}
	return nil
}

type SearchHomestayBusinessReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page        int64   `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`               //page
	Limit       int64   `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`             //limit
	Id          int64   `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`                   //id
	CreateTime  int64   `protobuf:"varint,4,opt,name=createTime,proto3" json:"createTime,omitempty"`   //createTime
	UpdateTime  int64   `protobuf:"varint,5,opt,name=updateTime,proto3" json:"updateTime,omitempty"`   //updateTime
	Title       string  `protobuf:"bytes,6,opt,name=title,proto3" json:"title,omitempty"`              //店铺名称
	UserId      int64   `protobuf:"varint,7,opt,name=userId,proto3" json:"userId,omitempty"`           //关联的用户id
	Info        string  `protobuf:"bytes,8,opt,name=info,proto3" json:"info,omitempty"`                //店铺介绍
	BossInfo    string  `protobuf:"bytes,9,opt,name=bossInfo,proto3" json:"bossInfo,omitempty"`        //房东介绍
	LicenseFron string  `protobuf:"bytes,10,opt,name=licenseFron,proto3" json:"licenseFron,omitempty"` //营业执照正面
	LicenseBack string  `protobuf:"bytes,11,opt,name=licenseBack,proto3" json:"licenseBack,omitempty"` //营业执照背面
	RowState    int64   `protobuf:"varint,12,opt,name=rowState,proto3" json:"rowState,omitempty"`      //0:禁止营业 1:正常营业
	Star        float64 `protobuf:"fixed64,13,opt,name=star,proto3" json:"star,omitempty"`             //店铺整体评价，冗余
	Tags        string  `protobuf:"bytes,14,opt,name=tags,proto3" json:"tags,omitempty"`               //每个店家一个标签，自己编辑
	Cover       string  `protobuf:"bytes,15,opt,name=cover,proto3" json:"cover,omitempty"`             //封面图
	HeaderImg   string  `protobuf:"bytes,16,opt,name=headerImg,proto3" json:"headerImg,omitempty"`     //店招门头图片
}

func (x *SearchHomestayBusinessReq) Reset() {
	*x = SearchHomestayBusinessReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_travel_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchHomestayBusinessReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchHomestayBusinessReq) ProtoMessage() {}

func (x *SearchHomestayBusinessReq) ProtoReflect() protoreflect.Message {
	mi := &file_travel_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchHomestayBusinessReq.ProtoReflect.Descriptor instead.
func (*SearchHomestayBusinessReq) Descriptor() ([]byte, []int) {
	return file_travel_proto_rawDescGZIP(), []int{31}
}

func (x *SearchHomestayBusinessReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchHomestayBusinessReq) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchHomestayBusinessReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SearchHomestayBusinessReq) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *SearchHomestayBusinessReq) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *SearchHomestayBusinessReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SearchHomestayBusinessReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *SearchHomestayBusinessReq) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

func (x *SearchHomestayBusinessReq) GetBossInfo() string {
	if x != nil {
		return x.BossInfo
	}
	return ""
}

func (x *SearchHomestayBusinessReq) GetLicenseFron() string {
	if x != nil {
		return x.LicenseFron
	}
	return ""
}

func (x *SearchHomestayBusinessReq) GetLicenseBack() string {
	if x != nil {
		return x.LicenseBack
	}
	return ""
}

func (x *SearchHomestayBusinessReq) GetRowState() int64 {
	if x != nil {
		return x.RowState
	}
	return 0
}

func (x *SearchHomestayBusinessReq) GetStar() float64 {
	if x != nil {
		return x.Star
	}
	return 0
}

func (x *SearchHomestayBusinessReq) GetTags() string {
	if x != nil {
		return x.Tags
	}
	return ""
}

func (x *SearchHomestayBusinessReq) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *SearchHomestayBusinessReq) GetHeaderImg() string {
	if x != nil {
		return x.HeaderImg
	}
	return ""
}

type SearchHomestayBusinessResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HomestayBusiness []*HomestayBusiness `protobuf:"bytes,1,rep,name=homestayBusiness,proto3" json:"homestayBusiness,omitempty"` //homestayBusiness
}

func (x *SearchHomestayBusinessResp) Reset() {
	*x = SearchHomestayBusinessResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_travel_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchHomestayBusinessResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchHomestayBusinessResp) ProtoMessage() {}

func (x *SearchHomestayBusinessResp) ProtoReflect() protoreflect.Message {
	mi := &file_travel_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchHomestayBusinessResp.ProtoReflect.Descriptor instead.
func (*SearchHomestayBusinessResp) Descriptor() ([]byte, []int) {
	return file_travel_proto_rawDescGZIP(), []int{32}
}

func (x *SearchHomestayBusinessResp) GetHomestayBusiness() []*HomestayBusiness {
	if x != nil {
		return x.HomestayBusiness
	}
	return nil
}

// --------------------------------民宿评价--------------------------------
type HomestayComment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                 //id
	CreateTime int64  `protobuf:"varint,2,opt,name=createTime,proto3" json:"createTime,omitempty"` //createTime
	UpdateTime int64  `protobuf:"varint,3,opt,name=updateTime,proto3" json:"updateTime,omitempty"` //updateTime
	HomestayId int64  `protobuf:"varint,4,opt,name=homestayId,proto3" json:"homestayId,omitempty"` //民宿id
	UserId     int64  `protobuf:"varint,5,opt,name=userId,proto3" json:"userId,omitempty"`         //用户id
	Content    string `protobuf:"bytes,6,opt,name=content,proto3" json:"content,omitempty"`        //评论内容
	Star       string `protobuf:"bytes,7,opt,name=star,proto3" json:"star,omitempty"`              //星星数,多个维度
}

func (x *HomestayComment) Reset() {
	*x = HomestayComment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_travel_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomestayComment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomestayComment) ProtoMessage() {}

func (x *HomestayComment) ProtoReflect() protoreflect.Message {
	mi := &file_travel_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomestayComment.ProtoReflect.Descriptor instead.
func (*HomestayComment) Descriptor() ([]byte, []int) {
	return file_travel_proto_rawDescGZIP(), []int{33}
}

func (x *HomestayComment) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *HomestayComment) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *HomestayComment) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *HomestayComment) GetHomestayId() int64 {
	if x != nil {
		return x.HomestayId
	}
	return 0
}

func (x *HomestayComment) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *HomestayComment) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *HomestayComment) GetStar() string {
	if x != nil {
		return x.Star
	}
	return ""
}

type AddHomestayCommentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HomestayId int64  `protobuf:"varint,1,opt,name=homestayId,proto3" json:"homestayId,omitempty"` //民宿id
	UserId     int64  `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`         //用户id
	Content    string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`        //评论内容
	Star       string `protobuf:"bytes,4,opt,name=star,proto3" json:"star,omitempty"`              //星星数,多个维度
}

func (x *AddHomestayCommentReq) Reset() {
	*x = AddHomestayCommentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_travel_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddHomestayCommentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddHomestayCommentReq) ProtoMessage() {}

func (x *AddHomestayCommentReq) ProtoReflect() protoreflect.Message {
	mi := &file_travel_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddHomestayCommentReq.ProtoReflect.Descriptor instead.
func (*AddHomestayCommentReq) Descriptor() ([]byte, []int) {
	return file_travel_proto_rawDescGZIP(), []int{34}
}

func (x *AddHomestayCommentReq) GetHomestayId() int64 {
	if x != nil {
		return x.HomestayId
	}
	return 0
}

func (x *AddHomestayCommentReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AddHomestayCommentReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *AddHomestayCommentReq) GetStar() string {
	if x != nil {
		return x.Star
	}
	return ""
}

type AddHomestayCommentResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddHomestayCommentResp) Reset() {
	*x = AddHomestayCommentResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_travel_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddHomestayCommentResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddHomestayCommentResp) ProtoMessage() {}

func (x *AddHomestayCommentResp) ProtoReflect() protoreflect.Message {
	mi := &file_travel_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddHomestayCommentResp.ProtoReflect.Descriptor instead.
func (*AddHomestayCommentResp) Descriptor() ([]byte, []int) {
	return file_travel_proto_rawDescGZIP(), []int{35}
}

type UpdateHomestayCommentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                 //id
	HomestayId int64  `protobuf:"varint,2,opt,name=homestayId,proto3" json:"homestayId,omitempty"` //民宿id
	UserId     int64  `protobuf:"varint,3,opt,name=userId,proto3" json:"userId,omitempty"`         //用户id
	Content    string `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`        //评论内容
	Star       string `protobuf:"bytes,5,opt,name=star,proto3" json:"star,omitempty"`              //星星数,多个维度
}

func (x *UpdateHomestayCommentReq) Reset() {
	*x = UpdateHomestayCommentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_travel_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateHomestayCommentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateHomestayCommentReq) ProtoMessage() {}

func (x *UpdateHomestayCommentReq) ProtoReflect() protoreflect.Message {
	mi := &file_travel_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateHomestayCommentReq.ProtoReflect.Descriptor instead.
func (*UpdateHomestayCommentReq) Descriptor() ([]byte, []int) {
	return file_travel_proto_rawDescGZIP(), []int{36}
}

func (x *UpdateHomestayCommentReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateHomestayCommentReq) GetHomestayId() int64 {
	if x != nil {
		return x.HomestayId
	}
	return 0
}

func (x *UpdateHomestayCommentReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UpdateHomestayCommentReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *UpdateHomestayCommentReq) GetStar() string {
	if x != nil {
		return x.Star
	}
	return ""
}

type UpdateHomestayCommentResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateHomestayCommentResp) Reset() {
	*x = UpdateHomestayCommentResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_travel_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateHomestayCommentResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateHomestayCommentResp) ProtoMessage() {}

func (x *UpdateHomestayCommentResp) ProtoReflect() protoreflect.Message {
	mi := &file_travel_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateHomestayCommentResp.ProtoReflect.Descriptor instead.
func (*UpdateHomestayCommentResp) Descriptor() ([]byte, []int) {
	return file_travel_proto_rawDescGZIP(), []int{37}
}

type DelHomestayCommentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //id
}

func (x *DelHomestayCommentReq) Reset() {
	*x = DelHomestayCommentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_travel_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelHomestayCommentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelHomestayCommentReq) ProtoMessage() {}

func (x *DelHomestayCommentReq) ProtoReflect() protoreflect.Message {
	mi := &file_travel_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelHomestayCommentReq.ProtoReflect.Descriptor instead.
func (*DelHomestayCommentReq) Descriptor() ([]byte, []int) {
	return file_travel_proto_rawDescGZIP(), []int{38}
}

func (x *DelHomestayCommentReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DelHomestayCommentResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelHomestayCommentResp) Reset() {
	*x = DelHomestayCommentResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_travel_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelHomestayCommentResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelHomestayCommentResp) ProtoMessage() {}

func (x *DelHomestayCommentResp) ProtoReflect() protoreflect.Message {
	mi := &file_travel_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelHomestayCommentResp.ProtoReflect.Descriptor instead.
func (*DelHomestayCommentResp) Descriptor() ([]byte, []int) {
	return file_travel_proto_rawDescGZIP(), []int{39}
}

type GetHomestayCommentByIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //id
}

func (x *GetHomestayCommentByIdReq) Reset() {
	*x = GetHomestayCommentByIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_travel_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHomestayCommentByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHomestayCommentByIdReq) ProtoMessage() {}

func (x *GetHomestayCommentByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_travel_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHomestayCommentByIdReq.ProtoReflect.Descriptor instead.
func (*GetHomestayCommentByIdReq) Descriptor() ([]byte, []int) {
	return file_travel_proto_rawDescGZIP(), []int{40}
}

func (x *GetHomestayCommentByIdReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetHomestayCommentByIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HomestayComment *HomestayComment `protobuf:"bytes,1,opt,name=homestayComment,proto3" json:"homestayComment,omitempty"` //homestayComment
}

func (x *GetHomestayCommentByIdResp) Reset() {
	*x = GetHomestayCommentByIdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_travel_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHomestayCommentByIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHomestayCommentByIdResp) ProtoMessage() {}

func (x *GetHomestayCommentByIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_travel_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHomestayCommentByIdResp.ProtoReflect.Descriptor instead.
func (*GetHomestayCommentByIdResp) Descriptor() ([]byte, []int) {
	return file_travel_proto_rawDescGZIP(), []int{41}
}

func (x *GetHomestayCommentByIdResp) GetHomestayComment() *HomestayComment {
	if x != nil {
		return x.HomestayComment
	}
	return nil
}

type SearchHomestayCommentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page       int64  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`             //page
	Limit      int64  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`           //limit
	Id         int64  `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`                 //id
	CreateTime int64  `protobuf:"varint,4,opt,name=createTime,proto3" json:"createTime,omitempty"` //createTime
	UpdateTime int64  `protobuf:"varint,5,opt,name=updateTime,proto3" json:"updateTime,omitempty"` //updateTime
	HomestayId int64  `protobuf:"varint,6,opt,name=homestayId,proto3" json:"homestayId,omitempty"` //民宿id
	UserId     int64  `protobuf:"varint,7,opt,name=userId,proto3" json:"userId,omitempty"`         //用户id
	Content    string `protobuf:"bytes,8,opt,name=content,proto3" json:"content,omitempty"`        //评论内容
	Star       string `protobuf:"bytes,9,opt,name=star,proto3" json:"star,omitempty"`              //星星数,多个维度
}

func (x *SearchHomestayCommentReq) Reset() {
	*x = SearchHomestayCommentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_travel_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchHomestayCommentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchHomestayCommentReq) ProtoMessage() {}

func (x *SearchHomestayCommentReq) ProtoReflect() protoreflect.Message {
	mi := &file_travel_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchHomestayCommentReq.ProtoReflect.Descriptor instead.
func (*SearchHomestayCommentReq) Descriptor() ([]byte, []int) {
	return file_travel_proto_rawDescGZIP(), []int{42}
}

func (x *SearchHomestayCommentReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchHomestayCommentReq) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchHomestayCommentReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SearchHomestayCommentReq) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *SearchHomestayCommentReq) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *SearchHomestayCommentReq) GetHomestayId() int64 {
	if x != nil {
		return x.HomestayId
	}
	return 0
}

func (x *SearchHomestayCommentReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *SearchHomestayCommentReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *SearchHomestayCommentReq) GetStar() string {
	if x != nil {
		return x.Star
	}
	return ""
}

type SearchHomestayCommentResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HomestayComment []*HomestayComment `protobuf:"bytes,1,rep,name=homestayComment,proto3" json:"homestayComment,omitempty"` //homestayComment
}

func (x *SearchHomestayCommentResp) Reset() {
	*x = SearchHomestayCommentResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_travel_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchHomestayCommentResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchHomestayCommentResp) ProtoMessage() {}

func (x *SearchHomestayCommentResp) ProtoReflect() protoreflect.Message {
	mi := &file_travel_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchHomestayCommentResp.ProtoReflect.Descriptor instead.
func (*SearchHomestayCommentResp) Descriptor() ([]byte, []int) {
	return file_travel_proto_rawDescGZIP(), []int{43}
}

func (x *SearchHomestayCommentResp) GetHomestayComment() []*HomestayComment {
	if x != nil {
		return x.HomestayComment
	}
	return nil
}

var File_travel_proto protoreflect.FileDescriptor

var file_travel_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x74, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02,
	0x70, 0x62, 0x22, 0xe6, 0x03, 0x0a, 0x08, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x54, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x75, 0x62, 0x54, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a,
	0x09, 0x70, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x70, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x2e, 0x0a, 0x12, 0x68,
	0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49,
	0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x68, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x79, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x72, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x72, 0x6f, 0x77, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x72, 0x6f, 0x77, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x6f, 0x6f,
	0x64, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x6f, 0x6f,
	0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x6f, 0x6f, 0x64, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x66, 0x6f, 0x6f, 0x64, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x68, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x68, 0x6f, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x79, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x6d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x48, 0x6f,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x50, 0x72, 0x69, 0x63, 0x65, 0x22, 0x9c, 0x03, 0x0a, 0x0e,
	0x41, 0x64, 0x64, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x52, 0x65, 0x71, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x54, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x75, 0x62, 0x54, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09,
	0x70, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x70, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x2e, 0x0a, 0x12, 0x68, 0x6f,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x68, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79,
	0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x72, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x72, 0x6f, 0x77, 0x54, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x72, 0x6f, 0x77, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x6f, 0x6f, 0x64,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x6f, 0x6f, 0x64,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x6f, 0x6f, 0x64, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x66, 0x6f, 0x6f, 0x64, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x68, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x68, 0x6f, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x79, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x6d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x48, 0x6f, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x79, 0x50, 0x72, 0x69, 0x63, 0x65, 0x22, 0x11, 0x0a, 0x0f, 0x41, 0x64,
	0x64, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x22, 0xaf, 0x03,
	0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79,
	0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x75, 0x62,
	0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x75, 0x62,
	0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x12, 0x0a,
	0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6e, 0x66,
	0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x4e, 0x75, 0x6d, 0x12,
	0x2e, 0x0a, 0x12, 0x68, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x42, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x68, 0x6f, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x79, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x77, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x72, 0x6f, 0x77, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x6f, 0x77, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x72, 0x6f, 0x77, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x66, 0x6f, 0x6f, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x66, 0x6f, 0x6f, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x6f, 0x6f,
	0x64, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x66, 0x6f,
	0x6f, 0x64, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x68, 0x6f, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x79, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d,
	0x68, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x30, 0x0a,
	0x13, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x6d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x50, 0x72, 0x69, 0x63, 0x65, 0x22,
	0x14, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x22, 0x20, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x48, 0x6f, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x79, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x11, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x48, 0x6f,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x22, 0x24, 0x0a, 0x12, 0x47, 0x65,
	0x74, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x3f, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x42,
	0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x28, 0x0a, 0x08, 0x68, 0x6f, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x48,
	0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x52, 0x08, 0x68, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x79, 0x22, 0x99, 0x04, 0x0a, 0x11, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x48, 0x6f, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x79, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x75, 0x62, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12,
	0x1c, 0x0a, 0x09, 0x70, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x70, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x2e, 0x0a,
	0x12, 0x68, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x49, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x68, 0x6f, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x79, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x72, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x6f, 0x77, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x72, 0x6f, 0x77, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66,
	0x6f, 0x6f, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66,
	0x6f, 0x6f, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x6f, 0x6f, 0x64, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x66, 0x6f, 0x6f, 0x64,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x68, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x79, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x68, 0x6f,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x6d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x50, 0x72, 0x69, 0x63, 0x65, 0x22, 0x3e, 0x0a,
	0x12, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x28, 0x0a, 0x08, 0x68, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x79, 0x52, 0x08, 0x68, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x22, 0xb2, 0x01,
	0x0a, 0x10, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x6f, 0x77, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x6f, 0x77, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x64, 0x61, 0x74, 0x61, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x64, 0x61,
	0x74, 0x61, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x72, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x68, 0x0a, 0x16, 0x41, 0x64, 0x64, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x79, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07,
	0x72, 0x6f, 0x77, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72,
	0x6f, 0x77, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61, 0x74, 0x61, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61, 0x49, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x72, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x72, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x19, 0x0a, 0x17,
	0x41, 0x64, 0x64, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x22, 0x7b, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x6f, 0x77, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x6f, 0x77, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x64, 0x61, 0x74, 0x61, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x64, 0x61, 0x74, 0x61, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x6f, 0x77, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x72, 0x6f, 0x77, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x1c, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x6f,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x28, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x79, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x19, 0x0a, 0x17,
	0x44, 0x65, 0x6c, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x22, 0x2c, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x48, 0x6f,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x42, 0x79,
	0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x5f, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x79, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x42, 0x79, 0x49, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x40, 0x0a, 0x10, 0x68, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x70, 0x62, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x52, 0x10, 0x68, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x22, 0xe5, 0x01, 0x0a, 0x19, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x72, 0x6f, 0x77, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x72, 0x6f, 0x77, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61, 0x74, 0x61,
	0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61, 0x49, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x72, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x72, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x5e,
	0x0a, 0x1a, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x40, 0x0a, 0x10,
	0x68, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x48, 0x6f, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x79, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x10, 0x68, 0x6f,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x22, 0xfc,
	0x02, 0x0a, 0x10, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x42, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x6f, 0x73, 0x73, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x6f, 0x73, 0x73, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x46, 0x72, 0x6f, 0x6e,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x46,
	0x72, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x42, 0x61,
	0x63, 0x6b, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73,
	0x65, 0x42, 0x61, 0x63, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x72, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x61, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x04, 0x73, 0x74, 0x61, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12,
	0x1c, 0x0a, 0x09, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x6d, 0x67, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x6d, 0x67, 0x22, 0xb2, 0x02,
	0x0a, 0x16, 0x41, 0x64, 0x64, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x42, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x6f,
	0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x6f,
	0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73,
	0x65, 0x46, 0x72, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x69, 0x63,
	0x65, 0x6e, 0x73, 0x65, 0x46, 0x72, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x69, 0x63, 0x65,
	0x6e, 0x73, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c,
	0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x6f,
	0x77, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x72, 0x6f,
	0x77, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x61, 0x72, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x73, 0x74, 0x61, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61,
	0x67, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x6d,
	0x67, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x49,
	0x6d, 0x67, 0x22, 0x19, 0x0a, 0x17, 0x41, 0x64, 0x64, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x79, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0xc5, 0x02,
	0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79,
	0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a,
	0x08, 0x62, 0x6f, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x62, 0x6f, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x69, 0x63,
	0x65, 0x6e, 0x73, 0x65, 0x46, 0x72, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x46, 0x72, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x6c,
	0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x12, 0x1a, 0x0a,
	0x08, 0x72, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x72, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x61,
	0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x73, 0x74, 0x61, 0x72, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x68, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x49, 0x6d, 0x67, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x68, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x49, 0x6d, 0x67, 0x22, 0x1c, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48,
	0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x28, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x79, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x19, 0x0a,
	0x17, 0x44, 0x65, 0x6c, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x42, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x2c, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x48,
	0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x42,
	0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x5f, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x79, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x42, 0x79, 0x49,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x40, 0x0a, 0x10, 0x68, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x79, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x70, 0x62, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x42, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x10, 0x68, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x42,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x22, 0xaf, 0x03, 0x0a, 0x19, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6e, 0x66,
	0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x6f, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x6f, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x20, 0x0a,
	0x0b, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x46, 0x72, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x46, 0x72, 0x6f, 0x6e, 0x12,
	0x20, 0x0a, 0x0b, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x42, 0x61, 0x63,
	0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x72, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x74, 0x61, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x73, 0x74, 0x61,
	0x72, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x68,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x6d, 0x67, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x6d, 0x67, 0x22, 0x5e, 0x0a, 0x1a, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x42, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x40, 0x0a, 0x10, 0x68, 0x6f, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x79, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x42,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x10, 0x68, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x79, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x22, 0xc7, 0x01, 0x0a, 0x0f, 0x48, 0x6f,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x68, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x68, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x74, 0x61, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73,
	0x74, 0x61, 0x72, 0x22, 0x7d, 0x0a, 0x15, 0x41, 0x64, 0x64, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a,
	0x68, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x68, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x74, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x74,
	0x61, 0x72, 0x22, 0x18, 0x0a, 0x16, 0x41, 0x64, 0x64, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x90, 0x01, 0x0a,
	0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x68, 0x6f, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x79, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x68,
	0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x74, 0x61, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x74, 0x61, 0x72, 0x22,
	0x1b, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x27, 0x0a, 0x15,
	0x44, 0x65, 0x6c, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x18, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x48, 0x6f, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x2b, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x5b, 0x0a, 0x1a,
	0x47, 0x65, 0x74, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3d, 0x0a, 0x0f, 0x68, 0x6f,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0f, 0x68, 0x6f, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0xfa, 0x01, 0x0a, 0x18, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x68, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x49, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x68, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x61, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x73, 0x74, 0x61, 0x72, 0x22, 0x5a, 0x0a, 0x19, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x3d, 0x0a, 0x0f, 0x68, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70,
	0x62, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x0f, 0x68, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x32, 0xb9, 0x0c, 0x0a, 0x06, 0x74, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x12, 0x36, 0x0a,
	0x0b, 0x41, 0x64, 0x64, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x12, 0x12, 0x2e, 0x70,
	0x62, 0x2e, 0x41, 0x64, 0x64, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x52, 0x65, 0x71,
	0x1a, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3f, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48,
	0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x12, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x16,
	0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x36, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x48, 0x6f, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x79, 0x12, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x48, 0x6f,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x44,
	0x65, 0x6c, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x42,
	0x0a, 0x0f, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x42, 0x79, 0x49,
	0x64, 0x12, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x79, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x47,
	0x65, 0x74, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x3f, 0x0a, 0x0e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x48, 0x6f, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x79, 0x12, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x70, 0x62,
	0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x4e, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x79, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x1a, 0x2e, 0x70, 0x62, 0x2e,
	0x41, 0x64, 0x64, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x48,
	0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x57, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x79, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x1d, 0x2e,
	0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x79, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x70,
	0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4e, 0x0a, 0x13,
	0x44, 0x65, 0x6c, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x12, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x48, 0x6f, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x79, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x1a,
	0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5a, 0x0a, 0x17,
	0x47, 0x65, 0x74, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x42, 0x79, 0x49, 0x64, 0x12, 0x1e, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74,
	0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74,
	0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x57, 0x0a, 0x16, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x12, 0x1d, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x48, 0x6f,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65,
	0x71, 0x1a, 0x1e, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x48, 0x6f, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x79, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x4e, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79,
	0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64,
	0x64, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x48, 0x6f, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x79, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x57, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x79, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x1d, 0x2e, 0x70, 0x62,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x42,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x70, 0x62, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x42, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4e, 0x0a, 0x13, 0x44, 0x65,
	0x6c, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x12, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x79, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e,
	0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x42, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5a, 0x0a, 0x17, 0x47, 0x65,
	0x74, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x42, 0x79, 0x49, 0x64, 0x12, 0x1e, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x6f,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x42, 0x79,
	0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x6f,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x42, 0x79,
	0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x57, 0x0a, 0x16, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x12, 0x1d, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x48, 0x6f, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x79, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x1a,
	0x1e, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x48, 0x6f, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x79, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x4b, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x48, 0x6f,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x1a, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x54, 0x0a, 0x15,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48,
	0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x4b, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65,
	0x6c, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x48, 0x6f, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x57, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x49, 0x64, 0x12, 0x1d, 0x2e, 0x70, 0x62, 0x2e, 0x47,
	0x65, 0x74, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65,
	0x74, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x54, 0x0a, 0x15, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x48, 0x6f, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a,
	0x1d, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x48, 0x6f, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x42, 0x06,
	0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_travel_proto_rawDescOnce sync.Once
	file_travel_proto_rawDescData = file_travel_proto_rawDesc
)

func file_travel_proto_rawDescGZIP() []byte {
	file_travel_proto_rawDescOnce.Do(func() {
		file_travel_proto_rawDescData = protoimpl.X.CompressGZIP(file_travel_proto_rawDescData)
	})
	return file_travel_proto_rawDescData
}

var file_travel_proto_msgTypes = make([]protoimpl.MessageInfo, 44)
var file_travel_proto_goTypes = []interface{}{
	(*Homestay)(nil),                    // 0: pb.Homestay
	(*AddHomestayReq)(nil),              // 1: pb.AddHomestayReq
	(*AddHomestayResp)(nil),             // 2: pb.AddHomestayResp
	(*UpdateHomestayReq)(nil),           // 3: pb.UpdateHomestayReq
	(*UpdateHomestayResp)(nil),          // 4: pb.UpdateHomestayResp
	(*DelHomestayReq)(nil),              // 5: pb.DelHomestayReq
	(*DelHomestayResp)(nil),             // 6: pb.DelHomestayResp
	(*GetHomestayByIdReq)(nil),          // 7: pb.GetHomestayByIdReq
	(*GetHomestayByIdResp)(nil),         // 8: pb.GetHomestayByIdResp
	(*SearchHomestayReq)(nil),           // 9: pb.SearchHomestayReq
	(*SearchHomestayResp)(nil),          // 10: pb.SearchHomestayResp
	(*HomestayActivity)(nil),            // 11: pb.HomestayActivity
	(*AddHomestayActivityReq)(nil),      // 12: pb.AddHomestayActivityReq
	(*AddHomestayActivityResp)(nil),     // 13: pb.AddHomestayActivityResp
	(*UpdateHomestayActivityReq)(nil),   // 14: pb.UpdateHomestayActivityReq
	(*UpdateHomestayActivityResp)(nil),  // 15: pb.UpdateHomestayActivityResp
	(*DelHomestayActivityReq)(nil),      // 16: pb.DelHomestayActivityReq
	(*DelHomestayActivityResp)(nil),     // 17: pb.DelHomestayActivityResp
	(*GetHomestayActivityByIdReq)(nil),  // 18: pb.GetHomestayActivityByIdReq
	(*GetHomestayActivityByIdResp)(nil), // 19: pb.GetHomestayActivityByIdResp
	(*SearchHomestayActivityReq)(nil),   // 20: pb.SearchHomestayActivityReq
	(*SearchHomestayActivityResp)(nil),  // 21: pb.SearchHomestayActivityResp
	(*HomestayBusiness)(nil),            // 22: pb.HomestayBusiness
	(*AddHomestayBusinessReq)(nil),      // 23: pb.AddHomestayBusinessReq
	(*AddHomestayBusinessResp)(nil),     // 24: pb.AddHomestayBusinessResp
	(*UpdateHomestayBusinessReq)(nil),   // 25: pb.UpdateHomestayBusinessReq
	(*UpdateHomestayBusinessResp)(nil),  // 26: pb.UpdateHomestayBusinessResp
	(*DelHomestayBusinessReq)(nil),      // 27: pb.DelHomestayBusinessReq
	(*DelHomestayBusinessResp)(nil),     // 28: pb.DelHomestayBusinessResp
	(*GetHomestayBusinessByIdReq)(nil),  // 29: pb.GetHomestayBusinessByIdReq
	(*GetHomestayBusinessByIdResp)(nil), // 30: pb.GetHomestayBusinessByIdResp
	(*SearchHomestayBusinessReq)(nil),   // 31: pb.SearchHomestayBusinessReq
	(*SearchHomestayBusinessResp)(nil),  // 32: pb.SearchHomestayBusinessResp
	(*HomestayComment)(nil),             // 33: pb.HomestayComment
	(*AddHomestayCommentReq)(nil),       // 34: pb.AddHomestayCommentReq
	(*AddHomestayCommentResp)(nil),      // 35: pb.AddHomestayCommentResp
	(*UpdateHomestayCommentReq)(nil),    // 36: pb.UpdateHomestayCommentReq
	(*UpdateHomestayCommentResp)(nil),   // 37: pb.UpdateHomestayCommentResp
	(*DelHomestayCommentReq)(nil),       // 38: pb.DelHomestayCommentReq
	(*DelHomestayCommentResp)(nil),      // 39: pb.DelHomestayCommentResp
	(*GetHomestayCommentByIdReq)(nil),   // 40: pb.GetHomestayCommentByIdReq
	(*GetHomestayCommentByIdResp)(nil),  // 41: pb.GetHomestayCommentByIdResp
	(*SearchHomestayCommentReq)(nil),    // 42: pb.SearchHomestayCommentReq
	(*SearchHomestayCommentResp)(nil),   // 43: pb.SearchHomestayCommentResp
}
var file_travel_proto_depIdxs = []int32{
	0,  // 0: pb.GetHomestayByIdResp.homestay:type_name -> pb.Homestay
	0,  // 1: pb.SearchHomestayResp.homestay:type_name -> pb.Homestay
	11, // 2: pb.GetHomestayActivityByIdResp.homestayActivity:type_name -> pb.HomestayActivity
	11, // 3: pb.SearchHomestayActivityResp.homestayActivity:type_name -> pb.HomestayActivity
	22, // 4: pb.GetHomestayBusinessByIdResp.homestayBusiness:type_name -> pb.HomestayBusiness
	22, // 5: pb.SearchHomestayBusinessResp.homestayBusiness:type_name -> pb.HomestayBusiness
	33, // 6: pb.GetHomestayCommentByIdResp.homestayComment:type_name -> pb.HomestayComment
	33, // 7: pb.SearchHomestayCommentResp.homestayComment:type_name -> pb.HomestayComment
	1,  // 8: pb.travel.AddHomestay:input_type -> pb.AddHomestayReq
	3,  // 9: pb.travel.UpdateHomestay:input_type -> pb.UpdateHomestayReq
	5,  // 10: pb.travel.DelHomestay:input_type -> pb.DelHomestayReq
	7,  // 11: pb.travel.GetHomestayById:input_type -> pb.GetHomestayByIdReq
	9,  // 12: pb.travel.SearchHomestay:input_type -> pb.SearchHomestayReq
	12, // 13: pb.travel.AddHomestayActivity:input_type -> pb.AddHomestayActivityReq
	14, // 14: pb.travel.UpdateHomestayActivity:input_type -> pb.UpdateHomestayActivityReq
	16, // 15: pb.travel.DelHomestayActivity:input_type -> pb.DelHomestayActivityReq
	18, // 16: pb.travel.GetHomestayActivityById:input_type -> pb.GetHomestayActivityByIdReq
	20, // 17: pb.travel.SearchHomestayActivity:input_type -> pb.SearchHomestayActivityReq
	23, // 18: pb.travel.AddHomestayBusiness:input_type -> pb.AddHomestayBusinessReq
	25, // 19: pb.travel.UpdateHomestayBusiness:input_type -> pb.UpdateHomestayBusinessReq
	27, // 20: pb.travel.DelHomestayBusiness:input_type -> pb.DelHomestayBusinessReq
	29, // 21: pb.travel.GetHomestayBusinessById:input_type -> pb.GetHomestayBusinessByIdReq
	31, // 22: pb.travel.SearchHomestayBusiness:input_type -> pb.SearchHomestayBusinessReq
	34, // 23: pb.travel.AddHomestayComment:input_type -> pb.AddHomestayCommentReq
	36, // 24: pb.travel.UpdateHomestayComment:input_type -> pb.UpdateHomestayCommentReq
	38, // 25: pb.travel.DelHomestayComment:input_type -> pb.DelHomestayCommentReq
	40, // 26: pb.travel.GetHomestayCommentById:input_type -> pb.GetHomestayCommentByIdReq
	42, // 27: pb.travel.SearchHomestayComment:input_type -> pb.SearchHomestayCommentReq
	2,  // 28: pb.travel.AddHomestay:output_type -> pb.AddHomestayResp
	4,  // 29: pb.travel.UpdateHomestay:output_type -> pb.UpdateHomestayResp
	6,  // 30: pb.travel.DelHomestay:output_type -> pb.DelHomestayResp
	8,  // 31: pb.travel.GetHomestayById:output_type -> pb.GetHomestayByIdResp
	10, // 32: pb.travel.SearchHomestay:output_type -> pb.SearchHomestayResp
	13, // 33: pb.travel.AddHomestayActivity:output_type -> pb.AddHomestayActivityResp
	15, // 34: pb.travel.UpdateHomestayActivity:output_type -> pb.UpdateHomestayActivityResp
	17, // 35: pb.travel.DelHomestayActivity:output_type -> pb.DelHomestayActivityResp
	19, // 36: pb.travel.GetHomestayActivityById:output_type -> pb.GetHomestayActivityByIdResp
	21, // 37: pb.travel.SearchHomestayActivity:output_type -> pb.SearchHomestayActivityResp
	24, // 38: pb.travel.AddHomestayBusiness:output_type -> pb.AddHomestayBusinessResp
	26, // 39: pb.travel.UpdateHomestayBusiness:output_type -> pb.UpdateHomestayBusinessResp
	28, // 40: pb.travel.DelHomestayBusiness:output_type -> pb.DelHomestayBusinessResp
	30, // 41: pb.travel.GetHomestayBusinessById:output_type -> pb.GetHomestayBusinessByIdResp
	32, // 42: pb.travel.SearchHomestayBusiness:output_type -> pb.SearchHomestayBusinessResp
	35, // 43: pb.travel.AddHomestayComment:output_type -> pb.AddHomestayCommentResp
	37, // 44: pb.travel.UpdateHomestayComment:output_type -> pb.UpdateHomestayCommentResp
	39, // 45: pb.travel.DelHomestayComment:output_type -> pb.DelHomestayCommentResp
	41, // 46: pb.travel.GetHomestayCommentById:output_type -> pb.GetHomestayCommentByIdResp
	43, // 47: pb.travel.SearchHomestayComment:output_type -> pb.SearchHomestayCommentResp
	28, // [28:48] is the sub-list for method output_type
	8,  // [8:28] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_travel_proto_init() }
func file_travel_proto_init() {
	if File_travel_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_travel_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Homestay); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_travel_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddHomestayReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_travel_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddHomestayResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_travel_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateHomestayReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_travel_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateHomestayResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_travel_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelHomestayReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_travel_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelHomestayResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_travel_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHomestayByIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_travel_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHomestayByIdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_travel_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchHomestayReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_travel_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchHomestayResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_travel_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HomestayActivity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_travel_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddHomestayActivityReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_travel_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddHomestayActivityResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_travel_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateHomestayActivityReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_travel_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateHomestayActivityResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_travel_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelHomestayActivityReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_travel_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelHomestayActivityResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_travel_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHomestayActivityByIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_travel_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHomestayActivityByIdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_travel_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchHomestayActivityReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_travel_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchHomestayActivityResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_travel_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HomestayBusiness); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_travel_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddHomestayBusinessReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_travel_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddHomestayBusinessResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_travel_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateHomestayBusinessReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_travel_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateHomestayBusinessResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_travel_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelHomestayBusinessReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_travel_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelHomestayBusinessResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_travel_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHomestayBusinessByIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_travel_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHomestayBusinessByIdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_travel_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchHomestayBusinessReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_travel_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchHomestayBusinessResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_travel_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HomestayComment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_travel_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddHomestayCommentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_travel_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddHomestayCommentResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_travel_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateHomestayCommentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_travel_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateHomestayCommentResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_travel_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelHomestayCommentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_travel_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelHomestayCommentResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_travel_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHomestayCommentByIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_travel_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHomestayCommentByIdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_travel_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchHomestayCommentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_travel_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchHomestayCommentResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_travel_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   44,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_travel_proto_goTypes,
		DependencyIndexes: file_travel_proto_depIdxs,
		MessageInfos:      file_travel_proto_msgTypes,
	}.Build()
	File_travel_proto = out.File
	file_travel_proto_rawDesc = nil
	file_travel_proto_goTypes = nil
	file_travel_proto_depIdxs = nil
}
